<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:s="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd"
	default-lazy-init="true">

	<description>SpringSecurity安全配置</description>

	<!-- http安全配置 -->
	<s:http auto-config="true" use-expressions="true">
		<s:form-login login-page="/login.jsp" default-target-url="/" authentication-failure-url="/login.jsp?error=true" />
		<s:logout logout-success-url="/" />
		<s:custom-filter ref="springSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
	</s:http>

	<!-- 认证配置, 使用userDetailsService提供的用户信息
	<s:authentication-manager alias="authenticationManager">
		<s:authentication-provider user-service-ref="userDetailsService">
			<s:password-encoder hash="plaintext" />
		</s:authentication-provider>
	</s:authentication-manager>-->
	
	<bean id="dataBaseAccessDecisionManager" class="org.jeabos.core.security.springsecurity.DataBaseAccessDecisionManager"></bean>  
	<bean id="dataBaseSecurityMetadataSource" class="org.jeabos.core.security.springsecurity.DataBaseFilterInvocationSecurityMetadataSource">  
		<constructor-arg name="securityManager" ref="securityManager"></constructor-arg>
		<property name="stripQueryStringFromUrls" value="true"></property>
	</bean>  

	<bean id="springSecurityInterceptor" class="org.jeabos.core.security.springsecurity.SpringSecurityInterceptor">
		<property name="authenticationManager" ref="org.springframework.security.authenticationManager" />  
		<property name="accessDecisionManager" ref="dataBaseAccessDecisionManager" />  
		<property name="securityMetadataSource" ref="dataBaseSecurityMetadataSource" /> 
	</bean>
	
    <bean id="org.springframework.security.authenticationManager" class="org.springframework.security.authentication.ProviderManager">
    	<property name="authenticationEventPublisher" ref="defaultAuthenticationEventPublisher"></property>
    	<property name="providers">
    		<list>
    			<ref local="daoAuthenticationProvider"/>
    			<ref local="anonymousAuthenticationProvider"/>
    		</list>
    	</property>
    </bean>
    
    <bean id="defaultAuthenticationEventPublisher" class="org.springframework.security.authentication.DefaultAuthenticationEventPublisher"></bean>
    
    <bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
    	<property name="key"><value>springside</value></property>
    </bean>
    
    <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
    	<property name="userDetailsService" ref="userDetailsManager"></property>
    </bean>
    
	<!-- 项目实现的用户查询服务 -->
	<bean id="userDetailsManager" class="org.jeabos.core.security.springsecurity.UserDetailsServiceImpl" />
</beans>